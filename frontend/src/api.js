import { useState } from 'react'
export const API=(p,o={})=>fetch('/api'+p,o).then(r=>r.json())
export function authHeaders(t,e={}){return {'Content-Type':'application/json','Authorization':'Bearer '+t,...e}}
export function useAuth(){const [token,setToken]=useState(localStorage.getItem('tw_token')||''); const [user,setUser]=useState(JSON.parse(localStorage.getItem('tw_user')||'null')); const login=async(e,p)=>{const r=await API('/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:e,password:p})}); if(r.token){localStorage.setItem('tw_token',r.token);localStorage.setItem('tw_user',JSON.stringify(r.user));setToken(r.token);setUser(r.user)} else throw new Error(r.error||'Login failed')}; const register=async(n,e,p)=>{const r=await API('/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name:n,email:e,password:p})}); if(r.token){localStorage.setItem('tw_token',r.token);localStorage.setItem('tw_user',JSON.stringify(r.user));setToken(r.token);setUser(r.user)} else throw new Error(r.error||'Register failed')}; const logout=()=>{localStorage.removeItem('tw_token');localStorage.removeItem('tw_user');setToken('');setUser(null)}; return {token,user,login,register,logout}}
